from faker import Faker
from loguru import logger

from modules.client import Client
from utils.utils import IPFS
from modules.config import CREATOR_CONTRACT
from utils.utils import gas_checker


class Create(): # пересмотреть

    def __init__(self, client: Client):
        self.client = client
        self.address = self.client.address
        self.contract = self.client.get_contract(CREATOR_CONTRACT['address'],
                                                 CREATOR_CONTRACT['ABI'])
    @gas_checker
    async def create(self):
        logger.info('Create NFT...')

        name = Faker().word().title()
        try:
           image_uri = IPFS().get_image_uri(name) # test
        except Exception as err:
            logger.error(f'{err}')

        tx_params = await self.client.prepare_transaction()
        transaction = await self.contract.functions.createContract(
            image_uri,
            name,
            [0, 500, self.address],
            self.address,
            [
                "0xe72878b40000000000000000000000000000000000000000000000000000000000000000",
                "0x674cbae60000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000ffffffffffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000042697066733a2f2f6261666b7265696769797967797879657476656a663434666961776f6d6a646f68336465736b357278786d696365326c67706e37346e7674637779000000000000000000000000000000000000000000000000000000000000",
                "0xafed7e9e0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001f4000000000000000000000000" + self.address[2:],
                "0x8ec998a0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000004e2516a2c207e84a1839755675dfd8ef6302f0a0000000000000000000000000000000000000000000000000000000000000004",
                "0xd904b94a000000000000000000000000000000000000000000000000000000000000000100000000000000000000000004e2516a2c207e84a1839755675dfd8ef6302f0a000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000c434db7eee00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000065a54ccd000000000000000000000000000000000000000000000000ffffffffffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" + self.address[2:] + "00000000000000000000000000000000000000000000000000000000",
                "0xc238d1ee000000000000000000000000" + self.address[2:] + "00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000140000000000000000000000000000000000000000000000000000000000000000"
            ]
        ).build_transaction(tx_params)

        tx_hash = await self.client.send_tx(transaction)

        return await self.client.verif_tx(tx_hash)